import pandas as pd
import numpy as np
from sklearn.metrics import precision_score, recall_score

# –§–∏–∫—Å–∏—Ä—É–µ–º random seed –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º–æ—Å—Ç–∏
np.random.seed(42)

print("üîç –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó PRECISION: –ü–û–ß–ï–ú–£ PHCF-BPR –õ–£–ß–®–ï POPULAR")
print("="*70)

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–∑ —Ñ–∞–π–ª–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
results_data = {
    'PHCF-BPR': {'precision': 0.0696, 'recall': 0.0775, 'ndcg': 0.1729},
    'Popular': {'precision': 0.0661, 'recall': 0.0380, 'ndcg': 0.1140},
    'KNN+PHCF-BPR': {'precision': 0.0667, 'recall': 0.0780, 'ndcg': 0.1778},
    'NCF': {'precision': 0.0538, 'recall': 0.0590, 'ndcg': 0.1628},
    'KNN': {'precision': 0.0474, 'recall': 0.0738, 'ndcg': 0.1483},
}

print("üìä –°–†–ê–í–ù–ï–ù–ò–ï –¢–û–ü-5 –ú–û–î–ï–õ–ï–ô –ü–û PRECISION:")
print("-" * 50)
sorted_models = sorted(results_data.items(), key=lambda x: x[1]['precision'], reverse=True)
for i, (model, metrics) in enumerate(sorted_models):
    print(f"  {i+1}. {model}: {metrics['precision']:.4f}")

print(f"\nüéØ –ö–õ–Æ–ß–ï–í–´–ï –†–ê–ó–õ–ò–ß–ò–Ø:")
phcf_precision = results_data['PHCF-BPR']['precision']
popular_precision = results_data['Popular']['precision']
difference = phcf_precision - popular_precision
percentage_improvement = (difference / popular_precision) * 100

print(f"  - PHCF-BPR Precision: {phcf_precision:.4f}")
print(f"  - Popular Precision: {popular_precision:.4f}")
print(f"  - –†–∞–∑–Ω–∏—Ü–∞: +{difference:.4f} ({percentage_improvement:.1f}% —É–ª—É—á—à–µ–Ω–∏–µ)")

print(f"\nüß† –ü–û–ß–ï–ú–£ PHCF-BPR –ü–†–ï–í–û–°–•–û–î–ò–¢ POPULAR:")

print(f"\n  1. üéØ –ü–ï–†–°–û–ù–ê–õ–ò–ó–ê–¶–ò–Ø VS –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–û–°–¢–¨:")
print(f"     Popular –º–æ–¥–µ–ª—å:")
print(f"     ‚úó –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç –æ–¥–Ω–∏ –∏ —Ç–µ –∂–µ —Ç–æ–ø-—Å–µ—Ä–≤–∏—Å—ã –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º")
print(f"     ‚úó –ù–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è")
print(f"     ‚úó –ú–æ–∂–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å —Å–µ—Ä–≤–∏—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç")
print(f"     ")
print(f"     PHCF-BPR –º–æ–¥–µ–ª—å:")
print(f"     ‚úì –ò–∑—É—á–∞–µ—Ç —Å–∫—Ä—ã—Ç—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
print(f"     ‚úì –£—á–∏—Ç—ã–≤–∞–µ—Ç similarity –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ items")
print(f"     ‚úì –ò—Å–ø–æ–ª—å–∑—É–µ—Ç BPR (Bayesian Personalized Ranking) loss")
print(f"     ‚úì –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

print(f"\n  2. üìà –ê–õ–ì–û–†–ò–¢–ú–ò–ß–ï–°–ö–ò–ï –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê:")
print(f"     PHCF-BPR –∏—Å–ø–æ–ª—å–∑—É–µ—Ç:")
print(f"     ‚Ä¢ LightFM —Å BPR loss —Ñ—É–Ω–∫—Ü–∏–µ–π")
print(f"     ‚Ä¢ Matrix factorization –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –ª–∞—Ç–µ–Ω—Ç–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤")
print(f"     ‚Ä¢ Embedding –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ items –≤ –æ–±—â–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ")
print(f"     ‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –ø–æ–ø–∞—Ä–Ω–æ–≥–æ —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏—è (pairwise ranking)")

print(f"\n  3. üîÑ –ü–†–û–¶–ï–°–° –û–ë–£–ß–ï–ù–ò–Ø:")
print(f"     Popular: –ø—Ä–æ—Å—Ç–æ —Å—á–∏—Ç–∞–µ—Ç —á–∞—Å—Ç–æ—Ç—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è")
print(f"     PHCF-BPR: –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç loss —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π")

print(f"\n  4. üìä –ö–ê–ß–ï–°–¢–í–û –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ô:")
print(f"     PHCF-BPR —Ç–∞–∫–∂–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç:")
print(f"     ‚Ä¢ –õ—É—á—à–∏–π Recall: {results_data['PHCF-BPR']['recall']:.4f} vs {results_data['Popular']['recall']:.4f}")
print(f"     ‚Ä¢ –õ—É—á—à–∏–π NDCG: {results_data['PHCF-BPR']['ndcg']:.4f} vs {results_data['Popular']['ndcg']:.4f}")

# –°–∏–º—É–ª—è—Ü–∏—è —Ä–∞–∑–Ω–æ—Å—Ç–∏ –ø–æ–¥—Ö–æ–¥–æ–≤
print(f"\nüé≤ –°–ò–ú–£–õ–Ø–¶–ò–Ø –†–ê–ó–ù–û–°–¢–ò –ü–û–î–•–û–î–û–í:")

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
df = pd.read_csv("calls.csv", sep=";")
df = df[~df['owner'].str.contains('cookies', na=False)]

# –ê–Ω–∞–ª–∏–∑ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
user_activity = df.groupby('owner').size().sort_values(ascending=False)
print(f"\n  üìà –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
print(f"     - –°–∞–º—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_activity.iloc[0]} –¥–µ–π—Å—Ç–≤–∏–π")
print(f"     - –°—Ä–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {user_activity.mean():.1f} –¥–µ–π—Å—Ç–≤–∏–π")
print(f"     - –ú–µ–¥–∏–∞–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {user_activity.median():.1f} –¥–µ–π—Å—Ç–≤–∏–π")
print(f"     - –ù–∞–∏–º–µ–Ω–µ–µ –∞–∫—Ç–∏–≤–Ω—ã–π: {user_activity.iloc[-1]} –¥–µ–π—Å—Ç–≤–∏–π")

# –ê–Ω–∞–ª–∏–∑ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π
unique_services_per_user = df.groupby('owner')['mid'].nunique().sort_values(ascending=False)
print(f"\n  üéØ –†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π:")
print(f"     - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ–º: {unique_services_per_user.iloc[0]} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤")
print(f"     - –°—Ä–µ–¥–Ω–µ–µ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ: {unique_services_per_user.mean():.1f} —Å–µ—Ä–≤–∏—Å–æ–≤")
print(f"     - –ú–µ–¥–∏–∞–Ω–Ω–æ–µ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ: {unique_services_per_user.median():.1f} —Å–µ—Ä–≤–∏—Å–æ–≤")

print(f"\nüí° –ö–û–ù–¶–ï–ü–¢–£–ê–õ–¨–ù–û–ï –û–ë–™–Ø–°–ù–ï–ù–ò–ï PRECISION:")
print(f"\n  Precision = –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ / –í—Å–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
print(f"  ")
print(f"  Popular –º–æ–¥–µ–ª—å:")
print(f"  - –í—Å–µ–≥–¥–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç: [–°–µ—Ä–≤–∏—Å_309, –°–µ—Ä–≤–∏—Å_1003093, –°–µ—Ä–≤–∏—Å_1000100, ...]")
print(f"  - –î–ª—è –í–°–ï–• –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–¥–∏–Ω–∞–∫–æ–≤–æ")
print(f"  - Precision –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–æ–≥–æ, –Ω–∞—Å–∫–æ–ª—å–∫–æ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º–∏")
print(f"  ")
print(f"  PHCF-BPR –º–æ–¥–µ–ª—å:")
print(f"  - –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ:")
print(f"    * –ò—Å—Ç–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
print(f"    * –°—Ö–æ–∂–µ—Å—Ç–∏ —Å –¥—Ä—É–≥–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
print(f"    * –°–∫—Ä—ã—Ç—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –≤ –¥–∞–Ω–Ω—ã—Ö")
print(f"  - –ö–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–≤–æ–π –Ω–∞–±–æ—Ä —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π")
print(f"  - Precision –≤—ã—à–µ, —Ç–∞–∫ –∫–∞–∫ —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è")

print(f"\nüî¨ –ú–ê–¢–ï–ú–ê–¢–ò–ß–ï–°–ö–û–ï –û–ë–™–Ø–°–ù–ï–ù–ò–ï BPR:")
print(f"  BPR (Bayesian Personalized Ranking) –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç:")
print(f"  ")
print(f"  P(i >_u j | Œò) ‚àù œÉ(xÃÇ_uij)")
print(f"  –≥–¥–µ:")
print(f"  - i - item, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å u –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç")
print(f"  - j - item, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å u –Ω–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç")
print(f"  - xÃÇ_uij = xÃÇ_ui - xÃÇ_uj (—Ä–∞–∑–Ω–æ—Å—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π)")
print(f"  - œÉ - sigmoid —Ñ—É–Ω–∫—Ü–∏—è")
print(f"  ")
print(f"  –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –º–æ–¥–µ–ª—å —É—á–∏—Ç—Å—è —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞—Ç—å items —Ç–∞–∫,")
print(f"  —á—Ç–æ–±—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–µ items –ø–æ–ª—É—á–∞–ª–∏ –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–∏–µ –æ—Ü–µ–Ω–∫–∏.")

print(f"\nüöÄ –ü–†–ê–ö–¢–ò–ß–ï–°–ö–ò–ï –í–´–í–û–î–´:")
print(f"  1. PHCF-BPR –ª—É—á—à–µ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏")
print(f"  2. Popular –ª—É—á—à–µ –∫–∞–∫ fallback –∏ –¥–ª—è cold start")
print(f"  3. –ì–∏–±—Ä–∏–¥–Ω—ã–π –ø–æ–¥—Ö–æ–¥ (KNN+PHCF-BPR) –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –µ—â–µ –ª—É—á—à–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã")
print(f"  4. –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∫–æ–º–±–∏–Ω–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π")

print(f"\nüìà –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ü–†–ò–ú–ï–ù–ï–ù–ò–Æ:")
print(f"  üéØ –î–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: Popular")
print(f"  üéØ –î–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: PHCF-BPR") 
print(f"  üéØ –î–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞: KNN+PHCF-BPR")
print(f"  üéØ –î–ª—è A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ PHCF-BPR vs Popular")

print(f"\n‚úÖ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:")
print(f"  PHCF-BPR –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª—É—á—à–∏–π Precision ({phcf_precision:.4f}) –ø–æ—Ç–æ–º—É —á—Ç–æ:")
print(f"  1. –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
print(f"  2. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è")
print(f"  3. –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏—è (BPR loss)")
print(f"  4. –£—á–∏—Ç—ã–≤–∞–µ—Ç —Å–ª–æ–∂–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º –ø–æ–≤–µ–¥–µ–Ω–∏–∏")
print(f"  ")
print(f"  –£–ª—É—á—à–µ–Ω–∏–µ –Ω–∞ {percentage_improvement:.1f}% –º–æ–∂–µ—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ø–æ–≤—ã—Å–∏—Ç—å")
print(f"  —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –±–∏–∑–Ω–µ—Å-–º–µ—Ç—Ä–∏–∫–∏!")